{"total":6,"pageSize":10,"pageCount":1,"data":[{"title":"RSA","slug":"RSA","date":"2020-05-30T12:09:02.000Z","updated":"2020-05-30T12:16:41.291Z","comments":true,"path":"api/articles/RSA.json","excerpt":"","keywords":null,"cover":"/2020/05/30/RSA/c62d183717d174ae73fe66980c67833b_wallhaven-gjvg6l.png","content":"<!--toc-->\n<p><br></p>\n<p>[toc]</p>\n<h1><span id=\"rsa\">RSA</span></h1><h2><span id=\"单向陷门函数与公钥密码\">单向陷门函数与公钥密码</span></h2><ul>\n<li>单向陷门函数：</li>\n</ul>\n<ol>\n<li>给定$x$，计算$y=f(x)$是容易的；</li>\n<li>给定$y$, 计算$x$使$x=f-1(y)$是不可行的；</li>\n<li>存在陷门$t$，已知$t$时，对给定的任何$y$，若相应的原象$x$存在，则计算$x$是容易的。</li>\n</ol>\n<ul>\n<li>加密：使用函数$f(x)$作为公钥，陷门$t$作为私钥。加密明文$m$得到密文$y=f(m)$。仅有知道私钥时可求出原文。</li>\n</ul>\n<p><br></p>\n<h2><span id=\"欧拉函数\">欧拉函数</span></h2><ol>\n<li>在$[1,n]$中，不大于$n$，且与其互素的正整数的个数，记为$\\phi(x)$</li>\n<li>$p$为素数时， $\\phi(p^k)=p^{k-1}(p-1)$</li>\n<li>若$(m_1, m_2)=1$，则$\\phi(m_1 m_2)=\\phi(m_1) \\phi(m_2)$</li>\n<li>若自变量为普通数字，则可改写为素数幂的乘积的形式。之后由3.中公式分解。</li>\n</ol>\n<p><br></p>\n<h2><span id=\"rsa步骤\">RSA步骤</span></h2><ol>\n<li>随机生成两个不同大素数$p$, $q$;</li>\n<li>计算$n=pq$, $\\phi(n)=(p-1)(q-1)$;</li>\n<li>随机选取整数$e$, $1&lt;e&lt;\\phi(n)$,满足$(e,\\phi(n))=1$;</li>\n<li>利用扩展欧基里德算法求出满足$ed=1 mod(\\phi(n))$的整数$d$;</li>\n<li>公开$(n,e)$，保密$(p,q,\\phi(n),d)$。其中$e$就是加密密钥，而$d$就是解密密钥，$n$称为模数；</li>\n<li>加密：$c=m^e \\ mod \\ n$ （若明文长度超过$n$，则分组）</li>\n<li>解密：$m=c^d \\ mod \\ n$</li>\n</ol>\n<p><br></p>\n<h2><span id=\"使用mpir实现短数据加解密\">使用mpir实现短数据加解密</span></h2><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//随机生成一个1024素数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">gen_prime</span><span class=\"params\">(<span class=\"keyword\">mpz_t</span> prime)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;                                         </span><br><span class=\"line\">    <span class=\"keyword\">gmp_randstate_t</span> grt;                  </span><br><span class=\"line\">    gmp_randinit_default(grt);    </span><br><span class=\"line\">    gmp_randseed_ui(grt, time(<span class=\"literal\">NULL</span>));     </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"keyword\">mpz_t</span> p;   </span><br><span class=\"line\">    mpz_init(p);</span><br><span class=\"line\">    mpz_urandomb(p, grt, <span class=\"number\">1024</span>); <span class=\"comment\">//随机生成1024位的大整数                </span></span><br><span class=\"line\">    mpz_nextprime(prime, p);  <span class=\"comment\">//使用GMP自带的素数生成函数  </span></span><br><span class=\"line\">    mpz_clear(p);   </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> _tmain(<span class=\"keyword\">int</span> argc, _TCHAR* argv[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">mpz_t</span> p, q, n, e, d, phi, sp, sq, m, c, m1;</span><br><span class=\"line\">\t<span class=\"keyword\">mpz_t</span> one, a, b;</span><br><span class=\"line\">\tmpz_init(n);</span><br><span class=\"line\">\tmpz_init(e);</span><br><span class=\"line\">\tmpz_init(d);</span><br><span class=\"line\">\tmpz_init(phi);</span><br><span class=\"line\">\tmpz_init(sp);</span><br><span class=\"line\">\tmpz_init(sq);</span><br><span class=\"line\">\tmpz_init(a);</span><br><span class=\"line\">\tmpz_init(b);</span><br><span class=\"line\">\tmpz_init(one);</span><br><span class=\"line\">        mpz_init(p);</span><br><span class=\"line\">\tmpz_init(q);</span><br><span class=\"line\">\tmpz_init(m);</span><br><span class=\"line\">\tmpz_init(c);</span><br><span class=\"line\">\tmpz_init(m1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 生成p和q</span></span><br><span class=\"line\">\tgen_prime(p);</span><br><span class=\"line\">\tgmp_printf (<span class=\"string\">\"p:\\n%Zd\\n\\n\"</span>, p);</span><br><span class=\"line\">\tSleep(<span class=\"number\">500</span>);\t<span class=\"comment\">// 以防因时间相同导致生成的pq相同</span></span><br><span class=\"line\">\tgen_prime(q);</span><br><span class=\"line\">        gmp_printf (<span class=\"string\">\"q:\\n%Zd\\n\\n\"</span>, q);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 计算n和phi(n)</span></span><br><span class=\"line\">\tmpz_sub_ui(sp, p, <span class=\"number\">1</span>);</span><br><span class=\"line\">\tmpz_sub_ui(sq, q, <span class=\"number\">1</span>);</span><br><span class=\"line\">\tmpz_mul(n, p, q);</span><br><span class=\"line\">\tmpz_mul(phi, sp, sq);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 选取整数e（公钥）</span></span><br><span class=\"line\">\tmpz_set_ui(e, <span class=\"number\">65537</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 求私钥d</span></span><br><span class=\"line\">\tmpz_invert(d, e, phi);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 短数据加密</span></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> * message = <span class=\"string\">\"1234567890ABCDEF\"</span>;</span><br><span class=\"line\">\tmpz_set_str(m, message, <span class=\"number\">16</span>);</span><br><span class=\"line\">\tgmp_printf(<span class=\"string\">\"原文:\\n%Zd\\n\"</span>, m);</span><br><span class=\"line\">\tmpz_powm(c, m, e, n);</span><br><span class=\"line\">\tgmp_printf(<span class=\"string\">\"\\n密文:\\n%Zd\\n\"</span>, c);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 短数据解密</span></span><br><span class=\"line\">\tmpz_powm(m1, c, d, n);</span><br><span class=\"line\">\tgmp_printf(<span class=\"string\">\"\\n解密:\\n%Zd\\n\\n\"</span>, m1);</span><br><span class=\"line\"> </span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/05/30/RSA/c62d183717d174ae73fe66980c67833b_wallhaven-gjvg6l.png\" alt></p>\n","text":"<br>[toc]RSA单向陷门函数与公钥密码单向陷门函数：给定$x$，计算$y=f(x)$是容易的；给定$y$, 计算$x$使$x=f-1(y)$是不可行的；存在陷门$t$，已知$t$时，对给定的任何$y$，若相应的原象$x$存在，则计算$x$是容易的。加密：使用函数$f(x)","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"信息安全","slug":"信息安全","count":2,"path":"api/tags/信息安全.json"}]},{"title":"英语1：简单句","slug":"英语1：简单句","date":"2020-05-21T15:05:44.000Z","updated":"2020-05-21T15:47:10.065Z","comments":true,"path":"api/articles/英语1：简单句.json","excerpt":"<p>《刘晓艳语法长难句》第一章笔记</p>","keywords":null,"cover":"/2020/05/21/%E8%8B%B1%E8%AF%AD1%EF%BC%9A%E7%AE%80%E5%8D%95%E5%8F%A5/%E6%90%9C%E7%8B%97%E6%88%AA%E5%9B%BE20200316222055.png","content":null,"text":"《刘晓艳语法长难句》第一章笔记<br>1. 英语句子特点2. 基本结构2.1 主谓2.2 主谓宾 &amp; 主谓表2.3 主谓双宾2.4 主谓宾宾补3. 句子成分3.1 谓语3.2 主语3.3 宾语3.4 表语4. 动词时态4.1 一般现在时4.2 一般将来时4.3 现在进行时","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"英语","slug":"英语","count":1,"path":"api/tags/英语.json"}]},{"title":"DES和分组密码工作模式","slug":"DES和分组密码工作模式","date":"2020-05-18T12:17:27.000Z","updated":"2020-05-30T12:19:21.815Z","comments":true,"path":"api/articles/DES和分组密码工作模式.json","excerpt":"<p>信息安全试验所需。</p>","keywords":null,"cover":"/2020/05/18/DES%E5%92%8C%E5%88%86%E7%BB%84%E5%AF%86%E7%A0%81%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F/DES.png","content":null,"text":"信息安全试验所需。[toc]<br>DES [Figure] 特点：流密码隐藏了明文模式误差传递：一个单元损坏只影响对应单元对明文的主动攻击是可能的,信息块可被替换、重放安全性较CFB差","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"信息安全","slug":"信息安全","count":2,"path":"api/tags/信息安全.json"}]},{"title":"Android总结1","slug":"Android总结1","date":"2020-05-15T12:36:25.000Z","updated":"2020-05-30T12:18:31.374Z","comments":true,"path":"api/articles/Android总结1.json","excerpt":"<p>Android开发App踩坑记录</p>","keywords":null,"cover":"/2020/05/15/Android%E6%80%BB%E7%BB%931/zelda.png","content":null,"text":"Android开发App踩坑记录[toc]<br>音频录音1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"Android","slug":"Android","count":1,"path":"api/tags/Android.json"}]},{"title":"SiamDW","slug":"SiamDW","date":"2020-03-04T15:22:25.000Z","updated":"2020-05-30T12:17:32.137Z","comments":true,"path":"api/articles/SiamDW.json","excerpt":"<p>Deeper and Wider Siamese Networks for Real-Time Visual Tracking</p>","keywords":null,"cover":"/2020/03/04/SiamDW/simple_siam.png","content":null,"text":"Deeper and Wider Siamese Networks for Real-Time Visual Tracking[toc]作者讲解视频&amp;PPT<br>siam特点共享权重做检索，对比相似性。information经过相同网络，在空间中产生表征向量，计算距离代","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"AI","slug":"AI","count":1,"path":"api/tags/AI.json"}]},{"title":"重置博客","slug":"重置博客","date":"2020-02-27T03:41:54.000Z","updated":"2020-05-21T15:55:18.491Z","comments":true,"path":"api/articles/重置博客.json","excerpt":"<p>更换硬盘后原有hexo本地文件丢失，重置博客后的小结。</p>","keywords":null,"cover":null,"content":null,"text":"更换硬盘后原有hexo本地文件丢失，重置博客后的小结。参考博客文中存在问题：clone后init，会报错非空文件夹不能执行，可init后将clone到的文件存入github仓库应配置两个branch：master用于存放blog页面内容；hexo分支用于存放hexo（本地）内容h","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"杂项","slug":"杂项","count":1,"path":"api/tags/杂项.json"}]}]}