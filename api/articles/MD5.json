{"title":"MD5","slug":"MD5","date":"2020-06-01T12:39:36.000Z","updated":"2020-06-01T12:42:26.541Z","comments":true,"path":"api/articles/MD5.json","photos":[],"link":"","excerpt":"信息安全技术试验","covers":["/2020/06/01/MD5/MD5.png","/2020/06/01/MD5/FGHI.png","/2020/06/01/MD5/FFGGHHII.png"],"content":"<p>信息安全技术试验</p>\n<a id=\"more\"></a>\n<!-- toc -->\n<ul>\n<li><a href=\"#md5\">MD5</a>\n<ul>\n<li><a href=\"#%E5%8A%9F%E8%83%BD\">功能</a></li>\n<li><a href=\"#%E7%AE%97%E6%B3%95%E8%BF%87%E7%A8%8B\">算法过程</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n<br>\n<p>[toc]</p>\n<br>\n<h1><span id=\"md5\"> MD5</span></h1>\n<p>信息摘要算法 Message-Digest Algorithm 5</p>\n<br>\n<h2><span id=\"功能\"> 功能</span></h2>\n<ol>\n<li>任意长度信息生成128位信息。</li>\n<li>唯一性</li>\n<li>不可逆</li>\n</ol>\n<br>\n<h2><span id=\"算法过程\"> 算法过程</span></h2>\n<p><img src=\"/2020/06/01/MD5/MD5.png\" alt=\"MD5\"></p>\n<p>以512位分组来处理输入的信息，且每一分组又被划分为16个32位子分组，经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个32位分组级联后将生成一个128位散列值。</p>\n<ol>\n<li>\n<p>填充</p>\n<p>填充结果由原消息（+ 填充）+消息长度构成。</p>\n<p>填充位：100…0，负责将结果填充至512b的倍数；</p>\n<p>消息长度：64b，记录原消息长度。</p>\n<p>另，填充+消息长度之和要大于64，即若原消息448，也要补充512+64。</p>\n</li>\n<li>\n<p>分组</p>\n<p>2.1 按照512b的长度分为L个大组。</p>\n<p>2.2 将每个大组，分为16个64b的小组。</p>\n</li>\n<li>\n<p>Buffer</p>\n<p>定义四个32b的数，16进制下为：A=a=01234567，B=b=89ABCDEF，C=c=FEDCBA98，D=d=76543210。</p>\n</li>\n<li>\n<p>定义函数</p>\n<p>定义4种函数FF、GG、HH、II，表示对abcd和某一小组的操作与赋值。</p>\n<p><img src=\"/2020/06/01/MD5/FGHI.png\" alt=\"FGHI\"></p>\n<p><img src=\"/2020/06/01/MD5/FFGGHHII.png\" alt=\"FFGGHHII\"></p>\n</li>\n<li>\n<p>运算</p>\n<p>进行L次大循环，大循环的输入是上一次大循环的输出与本次大循环所用的大组；输出是ABCD。</p>\n<p>每个大循环（大组）下进行4次小循环。每次小循环用到一种上述函数与一个小组。每个小循环结束后，将ABCD分别加上abcd。</p>\n</li>\n<li>\n<p>拼接</p>\n<p>最后将ABCD连接即可。</p>\n</li>\n</ol>\n","categories":[],"tags":[{"name":"信息安全","slug":"信息安全","count":3,"path":"api/tags/信息安全.json"}]}